{"version":3,"sources":["slices/tickers.js","reducer.js","components/NavBar.jsx","pages/MainPage.jsx","App.jsx","init.jsx","index.js"],"names":["tickersSlice","createSlice","name","initialState","tickers","reducers","updateTicker","state","action","payload","symbol","price","ticker","find","t","push","actions","combineReducers","tickersReducer","NavBar","AppBar","position","Toolbar","Typography","variant","color","MainPage","useSelector","Container","Grid","container","spacing","map","item","xs","sm","md","Card","CardHeader","title","subheader","CardContent","App","exact","path","CssBaseline","TICKER_LIST","app","store","configureStore","reducer","rootReducer","socket","WebSocket","onopen","forEach","message","stringifiedMessage","JSON","stringify","send","sendMessage","subs","onmessage","data","parse","FROMSYMBOL","PRICE","undefined","dispatch","StrictMode","init","ReactDOM","render","document","getElementById"],"mappings":"wMAEaA,EAAeC,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZC,QAAS,IAEXC,SAAU,CACRC,aAAc,SAACC,EAAOC,GACpB,MAA0BA,EAAOC,QAAzBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MACVC,EAASL,EAAMH,QAAQS,MAAK,SAACC,GAAD,OAAOA,EAAEJ,SAAWA,KACjDE,EAILA,EAAOD,MAAQA,EAHbJ,EAAMH,QAAQW,KAAKP,EAAOC,aAShCH,EACEN,EAAagB,QADfV,aAGaN,IAAf,QCrBeiB,cAAgB,CAC7Bb,QAASc,I,8FCWIC,EAVA,kBACb,cAACC,EAAA,EAAD,CAAQC,SAAS,WAAjB,SACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAlC,gCCgCSC,EA7BE,WACf,IAAQtB,EAAYuB,aAAY,SAACpB,GAAD,OAAWA,EAAMH,WAAzCA,QACR,OACE,qCACE,cAAC,EAAD,IACA,+BACE,gCACE,cAACwB,EAAA,EAAD,IACA,cAACA,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,SACG3B,EAAQ4B,KAAI,SAACpB,GAAD,OACX,cAACiB,EAAA,EAAD,CAAMI,MAAI,EAAqBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAlD,SACE,eAACC,EAAA,EAAD,CAAMb,QAAQ,WAAd,UACE,cAACc,EAAA,EAAD,CACEC,MAAO3B,EAAOF,OACd8B,UAAS,UAAK5B,EAAOD,MAAZ,OAEX,cAAC8B,EAAA,EAAD,QANY7B,EAAOF,wBCMxBgC,MAnBf,WACE,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,iBAAlB,UACE,cAACC,EAAA,EAAD,IACA,cAAC,EAAD,OAEF,cAAC,IAAD,CAAOD,KAAK,uBAAZ,mBAGA,cAAC,IAAD,8BCZFE,EAAc,CAAC,MAAO,MAAO,QCJ7BC,G,MDMS,WACb,IAAMC,EAAQC,YAAe,CAC3BC,QAASC,IAGLC,EAAS,IAAIC,UAAJ,sDARD,qEAqCd,OAnBAD,EAAOE,OAAS,WACdR,EAAYS,SAAQ,SAAC3C,IAPH,SAAC4C,GACnB,IAAMC,EAAqBC,KAAKC,UAAUH,GAE1CJ,EAAOQ,KAAKH,GAKVI,CACE,CACErD,OAAQ,SACRsD,KAAM,CAAC,YAAD,OAAalD,EAAb,eAMdwC,EAAOW,UAAY,YAAe,IAAZC,EAAW,EAAXA,KACpB,EAA6CN,KAAKO,MAAMD,GAApCtD,EAApB,EAAQwD,WAA2BvD,EAAnC,EAA4BwD,WACdC,IAAVzD,GAGJqC,EAAMqB,SAAS/D,EAAa,CAAEI,SAAQC,YAItC,cAAC,IAAM2D,WAAP,UACE,cAAC,IAAD,CAAUtB,MAAOA,EAAjB,SACE,cAAC,EAAD,QC3CIuB,IACZC,IAASC,OACP1B,EACA2B,SAASC,eAAe,W","file":"static/js/main.9dfc5ffe.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const tickersSlice = createSlice({\n  name: 'tickers',\n  initialState: {\n    tickers: [],\n  },\n  reducers: {\n    updateTicker: (state, action) => {\n      const { symbol, price } = action.payload;\n      const ticker = state.tickers.find((t) => t.symbol === symbol);\n      if (!ticker) {\n        state.tickers.push(action.payload);\n        return;\n      }\n      ticker.price = price;\n    },\n  },\n});\n\nexport const {\n  updateTicker,\n} = tickersSlice.actions;\n\nexport default tickersSlice.reducer;\n","import { combineReducers } from '@reduxjs/toolkit';\nimport tickersReducer from './slices/tickers';\n\nexport default combineReducers({\n  tickers: tickersReducer,\n});\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst NavBar = () => (\n  <AppBar position=\"relative\">\n    <Toolbar>\n      <Typography variant=\"title\" color=\"inherit\">\n        CryptoWatcher\n      </Typography>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default NavBar;\n","import React from 'react';\nimport {\n  Container,\n  Grid,\n  Card,\n  CardContent,\n  CardHeader,\n} from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport NavBar from '../components/NavBar.jsx';\n\nconst MainPage = () => {\n  const { tickers } = useSelector((state) => state.tickers);\n  return (\n    <>\n      <NavBar />\n      <main>\n        <div>\n          <Container />\n          <Container>\n            <Grid container spacing={4}>\n              {tickers.map((ticker) => (\n                <Grid item key={ticker.symbol} xs={12} sm={6} md={4}>\n                  <Card variant=\"outlined\">\n                    <CardHeader\n                      title={ticker.symbol}\n                      subheader={`${ticker.price}$`}\n                    />\n                    <CardContent />\n                  </Card>\n                </Grid>\n              ))}\n            </Grid>\n          </Container>\n        </div>\n      </main>\n    </>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { CssBaseline } from '@material-ui/core';\nimport MainPage from './pages/MainPage.jsx';\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/cryptowatcher\">\n          <CssBaseline />\n          <MainPage />\n        </Route>\n        <Route path=\"/cryptowatcher/login\">\n          Login\n        </Route>\n        <Route>\n          Not Found\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport rootReducer from './reducer';\nimport { updateTicker } from './slices/tickers';\nimport App from './App.jsx';\n\nconst API_KEY = '2d4f83e4dec4abd61adc8138b775853f144146a20dc4b330465d251fa4c6c517';\nconst TICKER_LIST = ['BTC', 'ETH', 'DOGE'];\n\nexport default () => {\n  const store = configureStore({\n    reducer: rootReducer,\n  });\n\n  const socket = new WebSocket(\n    `wss://streamer.cryptocompare.com/v2?api_key=${API_KEY}`,\n  );\n\n  const sendMessage = (message) => {\n    const stringifiedMessage = JSON.stringify(message);\n\n    socket.send(stringifiedMessage);\n  };\n\n  socket.onopen = () => {\n    TICKER_LIST.forEach((ticker) => {\n      sendMessage(\n        {\n          action: 'SubAdd',\n          subs: [`5~CCCAGG~${ticker}~USD`],\n        },\n      );\n    });\n  };\n\n  socket.onmessage = ({ data }) => {\n    const { FROMSYMBOL: symbol, PRICE: price } = JSON.parse(data);\n    if (price === undefined) {\n      return;\n    }\n    store.dispatch(updateTicker({ symbol, price }));\n  };\n\n  return (\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport init from './init.jsx';\nimport './index.css';\n\nconst app = init();\nReactDOM.render(\n  app,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}